filter {
  grok {
    match => { 'message' => "%{GREEDYDATA}"
    }
  }

  mutate {
    remove_field => ["host"]
  }

  if "authentication failed" in [message] {
    mutate {
      add_tag => [ "authentication_failed" ]
    }
  }

  if "authentication_failed" in [tags] and "invalid password" in [message] {
    mutate {
      add_tag => [ "invalid_password" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*\[ip=.*;oip=%{IP:oip};via=.*;ua=%{ZIMBRA_CLIENT:client}.*imap - authentication failed for \[%{EMAILADDRESS:account}] \(invalid password\)$"
      }
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*%{ZIMBRA_MAILBOX_ID_SOAP} *\[name=%{EMAILADDRESS:account};oip=%{IP:oip}.*oproto=%{ZIMBRA_CLIENT:client};soapId=(?<soapid>[\w]*).*%{ZIMBRA_SOAP_HANDLER} \["
      }
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*%{ZIMBRA_MAILBOX_ID_SOAP} *\[name=%{EMAILADDRESS:account};oip=%{IP:oip};ua=%{ZIMBRA_CLIENT:client};soapId=(?<soapid>[^;]*);\].*%{ZIMBRA_SOAP_HANDLER} \["
      }
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*%{ZIMBRA_MAILBOX_ID_SOAP} *\[name=%{EMAILADDRESS:account};oip=%{IP:oip};port=[\d]*;ua=%{ZIMBRA_CLIENT:client};soapId=(?<soapid>[^;]*);\].*%{ZIMBRA_SOAP_HANDLER} \[%{EMAILADDRESS}\], invalid password$"
      }
      remove_tag => [ "_grokparsefailure"]
    }
  }

  if "authentication_failed" in [tags] and "account not found" in [message] {
    mutate {
      add_tag => [ "account_not_found" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*oip=%{IP:oip}.*oproto=%{ZIMBRA_CLIENT:client}.*soapId=(?<soapid>[^;]*).*\[(?<account>[^\]]*).*account not found$"
      }
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*%{ZIMBRA_MAILBOX_ID_SOAP} *\[oip=%{IP:oip};ua=%{ZIMBRA_CLIENT:client};soapId(?<soapid>[^;]*).*%{ZIMBRA_SOAP_HANDLER} \[(?<account>[^\]]*)], account not found$"
      }
    remove_tag => [ "_grokparsefailure"]
    }
  }

  if "authentication_failed" in [tags] and "account lockout" in [message] {
    mutate {
      add_tag => [ "locked_account" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*%{ZIMBRA_MAILBOX_ID_SOAP} *\[name=(?<account>[^;]+);oip=(?<oip>[0-9.]+);ua=%{ZIMBRA_CLIENT:client};soapId=(?<soapid>[^;]*);].*?((?<reason>(?=account lockout).*).*)?$"
      }
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*\[name=(?<validated_account>[^;]*);oip=%{IP}.*oproto=(?<protocol>[^;]*).*soapId=(?<soapid>[^;]*).*\[(?<account>[^\]]*).*account lockout"
      }
    remove_tag => [ "_grokparsefailure"]
    }
  }

  if "authentication_failed" in [tags] and "status is closed" in [message] {
    mutate {
      add_tag => [ "account_closed" ]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*%{ZIMBRA_MAILBOX_ID_SOAP} *\[name=%{EMAILADDRESS:account};oip=%{IP:oip};oport=[\d]*;oproto=%{ZIMBRA_CLIENT:client};soapId=(?<soapid>[^;]*);\].*%{ZIMBRA_SOAP_HANDLER} \[(%{EMAILADDRESS}|[\w]*)\], account\(or domain\) status is closed$"
      }
    remove_tag => [ "_grokparsefailure"]
    }
  }

  if "suspended, for repeated failed login" in [message] {
    mutate {
      add_tag => ["suspended_ip"]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*%{ZIMBRA_MAILBOX_ID_SOAP}[\s\[\]\w-]*misc - Access from IP *%{IP:oip} suspended, for repeated failed login\.$"
      }
    remove_tag => [ "_grokparsefailure"]
    }
  }

  if "LmtpServer" in [message] and "Over quota" in [message] {
    mutate {
      add_tag => ["over_quota"]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*\[LmtpServer\-(?<lmtpserver_id>[\d]*)\]\s*\[name=(?<account>[^;]*).*"
      }
    remove_tag => [ "_grokparsefailure"]
    }
  }

  if "MailboxPurge" in [message] {
    mutate {
      add_tag => ["mailbox_purge"]
    }
    if "Deleting Message" in [message] {
      mutate {
      add_tag => ["purging_message"]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns"]
        match => { 'message' => "%{ZIMBRA_MAILBOX} .*\[MailboxPurge\]\s*\[name=(?<account>[^;]*)"
        }
      remove_tag => [ "_grokparsefailure"]
      }
    }
  }

  if "DelegateAuth" in [message] and "delegated access" in [message] {
    mutate {
      add_tag => ["delegated_access"]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*name=(?<account>[^;]*).*ip=%{IP:oip}.*ua=(?<client>[^;]*).*soapId=(?<soapid>[^;]*).*authenticated account=(?<authenticated_account>[^,]*).*target account=(?<target_account>[^;]*)"
      }
    remove_tag => [ "_grokparsefailure"]
    }
  }

  if "Junk-NotJunk-Handler" in [message] {
    mutate {
      add_tag => ["spam_reporting"]
    }
    grok {
      patterns_dir => ["/etc/logstash/patterns"]
      match => { 'message' => "%{ZIMBRA_MAILBOX} .*\[Junk-NotJunk-Handler].*account=%{EMAILADDRESS:account}.*isSpam=(?<spam>(true|false))"
      }
    remove_tag => [ "_grokparsefailure"]
    }
  }
}
