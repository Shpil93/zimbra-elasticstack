filter {
  grok {
    match => { 'message' => "%{GREEDYDATA}"
    }
  }

  mutate {
    remove_field => ["host"]
  }

  if "authentication failed" in [message] {
    mutate {
      add_tag => [ "authentication_failed" ]
    }
  }

  if "authentication_failed" in [tags] and "invalid password" in [message] {
    mutate {
      add_tag => [ "invalid_password" ]
    }
    grok {
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} *\[(?<identifier>qtp[^\]\[:]*):(?<soap>[^\]\[]*)]\s*\[name=(?<account>[^;]+);oip=(?<oip>[0-9.]+);ua=(?<client>[^;]+);soapId=(?<soapId>[^;]+);].*?((?<reason>(?=invalid password).*).*)?$"
      }
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} .*oip=%{IP:oip}.*ua=(?<client>[^;]*).*\[(?<account>[^\]]*)"
      }
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} .*name=(?<validated_account>[^;]+).*oip=%{IP:oip}.*oproto=(?<protocol>[^;]+).*\[(?<account>[^;\]]*)"
      }
    }
  }

  if "authentication_failed" in [tags] and "account not found" in [message] {
    mutate {
      add_tag => [ "account_not_found" ]
    }
    grok {
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} \s*\[(?<identifier>qtp[\w\d-]*):(?<soap>[\w\d:\/]*)]\s*\[oip=%{IP:oip};ua=(?<client>[\w\/\d\.]*);soapId=(?<soapid>[\d\w]*);\]\s*[\w\s-:]*\[(?<account>[^\]]*)],\s(?<reason>[^.*]*)"
      }
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} .*oip=%{IP:oip}.*oproto=(?<protocol>[^;]*).*soapId=(?<soapid>[^;]*).*\[(?<account>[^\]]*).*account not found"

      }
    }
  }

  if "authentication_failed" in [tags] and "account lockout" in [message] {
    mutate {
      add_tag => [ "locked_account" ]
    }
    grok {
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} *\[(?<identifier>qtp[^\]\[:]*):(?<soap>[^\]\[]*)]\s*\[name=(?<account>[^;]+);oip=(?<oip>[0-9.]+);ua=(?<client>[^;]+);soapId=(?<soapId>[^;]+);].*?((?<reason>(?=account lockout).*).*)?$"
      }
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} .*\[name=(?<validated_account>[^;]*);oip=%{IP}.*oproto=(?<protocol>[^;]*).*soapId=(?<soapid>[^;]*).*\[(?<account>[^\]]*).*account lockout"
      }
    }
  }

  if "suspended, for repeated failed login" in [message] {
    mutate {
      add_tag => ["suspended_ip"]
    }
    grok {
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} \s*\[(?<identifier>qtp[\w\d-]*):(?<soap>[\w\d:\/]*)][\s\[\]\w-]*IP\s*%{IP:oip}"
      }
    }
  }

  if "LmtpServer" and "Over quota" in [message] {
    mutate {
      add_tag => ["over_quota"]
    }
    grok {
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} \s*\[LmtpServer\-(?<lmtpserver_id>[\d]*)\]\s*\[name=(?<account>[^;]*).*"
      }
    }
  }

  if "MailboxPurge" in [message] {
    mutate {
      add_tag => ["mailbox_purge"]
    }
    if "Deleting Message" in [message] {
      mutate {
      add_tag => ["purging_message"]
      }
      grok {
        match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} \s*\[MailboxPurge\]\s*\[name=(?<account>[^;]*)"
        }
      }
    }
  }

  if "DelegateAuth" and "delegated access" in [message] {
    mutate {
      add_tag => ["delegated_access"]
    }
    grok {
      match => { 'message' => "%{DATE:date} %{TIME:time} %{LOGLEVEL:loglevel} .*name=(?<account>[^;]*).*ip=%{IP:oip}.*ua=(?<client>[^;]*).*soapId=(?<soapid>[^;]*).*authenticated account=(?<authenticated_account>[^,]*).*target account=(?<target_account>[^;]*)"
      }
    }
  }
}
